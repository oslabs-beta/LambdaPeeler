import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  DescribeRegistryRequest,
  DescribeRegistryResponse,
} from "../models/models_0";
import {
  SchemasClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../SchemasClient";
export { __MetadataBearer, $Command };
export interface DescribeRegistryCommandInput extends DescribeRegistryRequest {}
export interface DescribeRegistryCommandOutput
  extends DescribeRegistryResponse,
    __MetadataBearer {}
export declare class DescribeRegistryCommand extends $Command<
  DescribeRegistryCommandInput,
  DescribeRegistryCommandOutput,
  SchemasClientResolvedConfig
> {
  readonly input: DescribeRegistryCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: DescribeRegistryCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: SchemasClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<DescribeRegistryCommandInput, DescribeRegistryCommandOutput>;
  private serialize;
  private deserialize;
}
