import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import { DeleteSchemaVersionRequest } from "../models/models_0";
import {
  SchemasClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../SchemasClient";
export { __MetadataBearer, $Command };
export interface DeleteSchemaVersionCommandInput
  extends DeleteSchemaVersionRequest {}
export interface DeleteSchemaVersionCommandOutput extends __MetadataBearer {}
export declare class DeleteSchemaVersionCommand extends $Command<
  DeleteSchemaVersionCommandInput,
  DeleteSchemaVersionCommandOutput,
  SchemasClientResolvedConfig
> {
  readonly input: DeleteSchemaVersionCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: DeleteSchemaVersionCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: SchemasClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<DeleteSchemaVersionCommandInput, DeleteSchemaVersionCommandOutput>;
  private serialize;
  private deserialize;
}
