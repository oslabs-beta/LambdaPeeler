import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import { Uint8ArrayBlobAdapter } from "@smithy/util-stream";
import {
  GetCodeBindingSourceRequest,
  GetCodeBindingSourceResponse,
} from "../models/models_0";
import {
  SchemasClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../SchemasClient";
export { __MetadataBearer, $Command };
export interface GetCodeBindingSourceCommandInput
  extends GetCodeBindingSourceRequest {}
export type GetCodeBindingSourceCommandOutputType = Pick<
  GetCodeBindingSourceResponse,
  Exclude<keyof GetCodeBindingSourceResponse, "Body">
> & {
  Body?: Uint8ArrayBlobAdapter;
};
export interface GetCodeBindingSourceCommandOutput
  extends GetCodeBindingSourceCommandOutputType,
    __MetadataBearer {}
export declare class GetCodeBindingSourceCommand extends $Command<
  GetCodeBindingSourceCommandInput,
  GetCodeBindingSourceCommandOutput,
  SchemasClientResolvedConfig
> {
  readonly input: GetCodeBindingSourceCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: GetCodeBindingSourceCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: SchemasClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<
    GetCodeBindingSourceCommandInput,
    GetCodeBindingSourceCommandOutput
  >;
  private serialize;
  private deserialize;
}
