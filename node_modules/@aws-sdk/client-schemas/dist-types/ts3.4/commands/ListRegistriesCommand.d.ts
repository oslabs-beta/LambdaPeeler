import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  ListRegistriesRequest,
  ListRegistriesResponse,
} from "../models/models_0";
import {
  SchemasClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../SchemasClient";
export { __MetadataBearer, $Command };
export interface ListRegistriesCommandInput extends ListRegistriesRequest {}
export interface ListRegistriesCommandOutput
  extends ListRegistriesResponse,
    __MetadataBearer {}
export declare class ListRegistriesCommand extends $Command<
  ListRegistriesCommandInput,
  ListRegistriesCommandOutput,
  SchemasClientResolvedConfig
> {
  readonly input: ListRegistriesCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: ListRegistriesCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: SchemasClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<ListRegistriesCommandInput, ListRegistriesCommandOutput>;
  private serialize;
  private deserialize;
}
