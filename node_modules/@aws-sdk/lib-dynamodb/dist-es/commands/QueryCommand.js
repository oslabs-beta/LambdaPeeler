import { QueryCommand as __QueryCommand, } from "@aws-sdk/client-dynamodb";
import { Command as $Command } from "@smithy/smithy-client";
import { DynamoDBDocumentClientCommand } from "../baseCommand/DynamoDBDocumentClientCommand";
export { DynamoDBDocumentClientCommand, $Command };
export class QueryCommand extends DynamoDBDocumentClientCommand {
    constructor(input) {
        super();
        this.input = input;
        this.inputKeyNodes = [
            {
                key: "KeyConditions",
                children: {
                    children: [{ key: "AttributeValueList" }],
                },
            },
            {
                key: "QueryFilter",
                children: {
                    children: [{ key: "AttributeValueList" }],
                },
            },
            { key: "ExclusiveStartKey" },
            { key: "ExpressionAttributeValues" },
        ];
        this.outputKeyNodes = [{ key: "Items" }, { key: "LastEvaluatedKey" }];
        this.clientCommand = new __QueryCommand(this.input);
        this.middlewareStack = this.clientCommand.middlewareStack;
    }
    resolveMiddleware(clientStack, configuration, options) {
        this.addMarshallingMiddleware(configuration);
        const stack = clientStack.concat(this.middlewareStack);
        const handler = this.clientCommand.resolveMiddleware(stack, configuration, options);
        return async () => handler(this.clientCommand);
    }
}
