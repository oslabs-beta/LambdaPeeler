import {
  Condition,
  ScanCommand as __ScanCommand,
  ScanCommandInput as __ScanCommandInput,
  ScanCommandOutput as __ScanCommandOutput,
} from "@aws-sdk/client-dynamodb";
import { NativeAttributeValue } from "@aws-sdk/util-dynamodb";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MiddlewareStack,
} from "@smithy/types";
import { DynamoDBDocumentClientCommand } from "../baseCommand/DynamoDBDocumentClientCommand";
import {
  DynamoDBDocumentClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../DynamoDBDocumentClient";
export { DynamoDBDocumentClientCommand, $Command };
export type ScanCommandInput = Pick<
  __ScanCommandInput,
  Exclude<
    keyof __ScanCommandInput,
    "ScanFilter" | "ExclusiveStartKey" | "ExpressionAttributeValues"
  >
> & {
  ScanFilter?: Record<
    string,
    Pick<Condition, Exclude<keyof Condition, "AttributeValueList">> & {
      AttributeValueList?: NativeAttributeValue[];
    }
  >;
  ExclusiveStartKey?: Record<string, NativeAttributeValue>;
  ExpressionAttributeValues?: Record<string, NativeAttributeValue>;
};
export type ScanCommandOutput = Pick<
  __ScanCommandOutput,
  Exclude<keyof __ScanCommandOutput, "Items" | "LastEvaluatedKey">
> & {
  Items?: Record<string, NativeAttributeValue>[];
  LastEvaluatedKey?: Record<string, NativeAttributeValue>;
};
export declare class ScanCommand extends DynamoDBDocumentClientCommand<
  ScanCommandInput,
  ScanCommandOutput,
  __ScanCommandInput,
  __ScanCommandOutput,
  DynamoDBDocumentClientResolvedConfig
> {
  readonly input: ScanCommandInput;
  protected readonly inputKeyNodes: (
    | {
        key: string;
        children: {
          children: {
            key: string;
          }[];
        };
      }
    | {
        key: string;
        children?: undefined;
      }
  )[];
  protected readonly outputKeyNodes: {
    key: string;
  }[];
  protected readonly clientCommand: __ScanCommand;
  readonly middlewareStack: MiddlewareStack<
    ScanCommandInput | __ScanCommandInput,
    ScanCommandOutput | __ScanCommandOutput
  >;
  constructor(input: ScanCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: DynamoDBDocumentClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<ScanCommandInput, ScanCommandOutput>;
}
