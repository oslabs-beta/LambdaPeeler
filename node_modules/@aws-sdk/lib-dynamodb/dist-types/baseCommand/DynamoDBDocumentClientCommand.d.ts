import { Command as $Command } from "@smithy/smithy-client";
import { MiddlewareStack } from "@smithy/types";
import { KeyNode } from "../commands/utils";
import { DynamoDBDocumentClientResolvedConfig } from "../DynamoDBDocumentClient";
/**
 * Base class for Commands in lib-dynamodb used to pass middleware to
 * the underlying DynamoDBClient Commands.
 *
 * @public
 */
export declare abstract class DynamoDBDocumentClientCommand<Input extends object, Output extends object, BaseInput extends object, BaseOutput extends object, ResolvedClientConfiguration> extends $Command<Input | BaseInput, Output | BaseOutput, ResolvedClientConfiguration> {
    protected abstract readonly inputKeyNodes: KeyNode[];
    protected abstract readonly outputKeyNodes: KeyNode[];
    protected abstract clientCommand: $Command<Input | BaseInput, Output | BaseOutput, ResolvedClientConfiguration>;
    abstract middlewareStack: MiddlewareStack<Input | BaseInput, Output | BaseOutput>;
    private static defaultLogFilterOverrides;
    protected addMarshallingMiddleware(configuration: DynamoDBDocumentClientResolvedConfig): void;
}
